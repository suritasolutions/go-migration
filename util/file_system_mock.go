// Code generated by MockGen. DO NOT EDIT.
// Source: ./util/file_system_contract.go
//
// Generated by this command:
//
//	mockgen -source=./util/file_system_contract.go -package=util -destination=./util/file_system_mock.go
//

// Package util is a generated GoMock package.
package util

import (
	fs "io/fs"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockFileSystem is a mock of FileSystem interface.
type MockFileSystem struct {
	ctrl     *gomock.Controller
	recorder *MockFileSystemMockRecorder
}

// MockFileSystemMockRecorder is the mock recorder for MockFileSystem.
type MockFileSystemMockRecorder struct {
	mock *MockFileSystem
}

// NewMockFileSystem creates a new mock instance.
func NewMockFileSystem(ctrl *gomock.Controller) *MockFileSystem {
	mock := &MockFileSystem{ctrl: ctrl}
	mock.recorder = &MockFileSystemMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFileSystem) EXPECT() *MockFileSystemMockRecorder {
	return m.recorder
}

// CreateFolder mocks base method.
func (m *MockFileSystem) CreateFolder(folder string, perm fs.FileMode) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFolder", folder, perm)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateFolder indicates an expected call of CreateFolder.
func (mr *MockFileSystemMockRecorder) CreateFolder(folder, perm any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFolder", reflect.TypeOf((*MockFileSystem)(nil).CreateFolder), folder, perm)
}

// FolderExists mocks base method.
func (m *MockFileSystem) FolderExists(folder string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FolderExists", folder)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FolderExists indicates an expected call of FolderExists.
func (mr *MockFileSystemMockRecorder) FolderExists(folder any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FolderExists", reflect.TypeOf((*MockFileSystem)(nil).FolderExists), folder)
}
