// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/migration/migration_contract.go
//
// Generated by this command:
//
//	mockgen -source=./internal/migration/migration_contract.go -destination=./internal/migration/migration_mock.go -package=migration
//

// Package migration is a generated GoMock package.
package migration

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockMigration is a mock of Migration interface.
type MockMigration struct {
	ctrl     *gomock.Controller
	recorder *MockMigrationMockRecorder
}

// MockMigrationMockRecorder is the mock recorder for MockMigration.
type MockMigrationMockRecorder struct {
	mock *MockMigration
}

// NewMockMigration creates a new mock instance.
func NewMockMigration(ctrl *gomock.Controller) *MockMigration {
	mock := &MockMigration{ctrl: ctrl}
	mock.recorder = &MockMigrationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMigration) EXPECT() *MockMigrationMockRecorder {
	return m.recorder
}

// Migrate mocks base method.
func (m *MockMigration) Migrate() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Migrate")
}

// Migrate indicates an expected call of Migrate.
func (mr *MockMigrationMockRecorder) Migrate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Migrate", reflect.TypeOf((*MockMigration)(nil).Migrate))
}

// Rollback mocks base method.
func (m *MockMigration) Rollback() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Rollback")
}

// Rollback indicates an expected call of Rollback.
func (mr *MockMigrationMockRecorder) Rollback() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Rollback", reflect.TypeOf((*MockMigration)(nil).Rollback))
}
